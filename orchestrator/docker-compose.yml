version: "3"
services:
  # Travel API
  travel:
    build: ./Services/TravelService
    container_name: travel_orchestrator
    ports:
      - "4001:4001"
    networks:
      - api-network
    
  rooting:
    build: ./Services/RootingService
    container_name: rooting_orchestrator
    ports:
      - "4002:4002"
    networks:
      - api-network
    
  payment:
    build: ./Services/PaymentService
    container_name: payment_orchestrator
    ports:
      - "4003:4003"
    networks:
      - api-network
      
  booking:
    build: ./Services/BookingService
    container_name: booking_orchestrator
    ports:
      - "4004:4004"
    networks:
      - api-network

  late:
    build: ./Services/LateService
    container_name: late_orchestrator
    ports:
      - "4017:4017"
    networks:
      - api-network



      
  customer:
    build: ./Services/CustomerService
    container_name: customer_orchestrator
    ports:
      - "4008:4008"
    networks:
      - api-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - api-network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "Late:1:1"
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - api-network

networks:
  api-network:
    driver: bridge
